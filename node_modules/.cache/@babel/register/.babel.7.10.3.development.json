{
  "{\"sourceRoot\":\"/Users/rachaelthomas/turing/4module/pet-box/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rachaelthomas/turing/4module/pet-box\",\"filename\":\"/Users/rachaelthomas/turing/4module/pet-box/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rachaelthomas/turing/4module/pet-box\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rachaelthomas/turing/4module/pet-box/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rachaelthomas/turing/4module/pet-box",
      "filename": "/Users/rachaelthomas/turing/4module/pet-box/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rachaelthomas/turing/4module/pet-box",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rachaelthomas/turing/4module/pet-box/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rachaelthomas/turing/4module/pet-box/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rachaelthomas/turing/4module/pet-box/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require(\"express\");\n\nvar app = express();\napp.use(express[\"static\"](\"public\"));\napp.use(express.json());\n\nvar cors = require(\"cors\");\n\napp.use(cors());\napp.set(\"port\", process.env.PORT || 3000);\napp.locals.title = \"Pet Box\";\napp.get(\"/\", function (request, response) {// response.send('Oh hey Pet Box');\n});\napp.listen(app.get(\"port\"), function () {\n  console.log(\"\".concat(app.locals.title, \" is running on http://localhost:\").concat(app.get(\"port\"), \".\"));\n});\napp.locals.pets = [{\n  id: \"a1\",\n  name: \"Rover\",\n  type: \"dog\"\n}, {\n  id: \"b2\",\n  name: \"Marcus Aurelius\",\n  type: \"parakeet\"\n}, {\n  id: \"c3\",\n  name: \"Craisins\",\n  type: \"cat\"\n}];\napp.get(\"/api/v1/pets\", function (request, response) {\n  var pets = app.locals.pets;\n  response.json({\n    pets: pets\n  });\n});\napp.get(\"/api/v1/pets/:id\", function (request, response) {\n  var id = request.params.id;\n  var pet = app.locals.pets.find(function (pet) {\n    return pet.id === id;\n  });\n\n  if (!pet) {\n    return response.sendStatus(404);\n  }\n\n  response.status(200).json(pet);\n});\napp.post(\"/api/v1/pets\", function (request, response) {\n  var id = Date.now().toString();\n  var pet = request.body;\n\n  for (var _i = 0, _arr = [\"name\", \"type\"]; _i < _arr.length; _i++) {\n    var requiredParameter = _arr[_i];\n\n    if (!pet[requiredParameter]) {\n      return response.status(422).send({\n        error: \"Expected format: { name: <String>, type: <String> }. You're missing a \\\"\".concat(requiredParameter, \"\\\" property.\")\n      });\n    }\n  }\n\n  var name = pet.name,\n      type = pet.type;\n  app.locals.pets.push({\n    name: name,\n    type: type,\n    id: id\n  });\n  response.status(201).json({\n    name: name,\n    type: type,\n    id: id\n  });\n});\napp[\"delete\"](\"/api/v1/pets/:id\", function (request, response) {\n  var id = request.params.id;\n  var pet = app.locals.pets.find(function (pet) {\n    return pet.id === id;\n  });\n\n  if (!pet) {\n    return response.status(404).send({\n      error: \"Cannot find a pet with that id.\"\n    });\n  }\n\n  app.locals.pets = app.locals.pets.filter(function (pet) {\n    return pet.id !== id;\n  });\n  response.status(200).json(pet);\n});\napp.patch(\"/api/v1/pets/:id\", function (request, response) {\n  var id = request.params.id;\n  var updatedData = request.body;\n  var petToUpdate = app.locals.pets.find(function (pet) {\n    return pet.id === id;\n  });\n\n  if (petToUpdate) {\n    app.locals.pets.forEach(function (pet) {\n      if (pet.id === id) {\n        pet.name = updatedData.value;\n        response.status(200).json(pet);\n      }\n    });\n  } else {\n    response.status(404).send({\n      error: \"Cannot find a pet with that id.\"\n    });\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "use",
        "json",
        "cors",
        "set",
        "process",
        "env",
        "PORT",
        "locals",
        "title",
        "get",
        "request",
        "response",
        "listen",
        "console",
        "log",
        "pets",
        "id",
        "name",
        "type",
        "params",
        "pet",
        "find",
        "sendStatus",
        "status",
        "post",
        "Date",
        "now",
        "toString",
        "body",
        "requiredParameter",
        "send",
        "error",
        "push",
        "filter",
        "patch",
        "updatedData",
        "petToUpdate",
        "forEach",
        "value"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/rachaelthomas/turing/4module/pet-box/",
      "sourcesContent": [
        "const express = require(\"express\");\nconst app = express();\napp.use(express.static(\"public\"));\napp.use(express.json());\nconst cors = require(\"cors\");\napp.use(cors());\n\napp.set(\"port\", process.env.PORT || 3000);\napp.locals.title = \"Pet Box\";\n\napp.get(\"/\", (request, response) => {\n  // response.send('Oh hey Pet Box');\n});\n\napp.listen(app.get(\"port\"), () => {\n  console.log(\n    `${app.locals.title} is running on http://localhost:${app.get(\"port\")}.`\n  );\n});\n\napp.locals.pets = [\n  { id: \"a1\", name: \"Rover\", type: \"dog\" },\n  { id: \"b2\", name: \"Marcus Aurelius\", type: \"parakeet\" },\n  { id: \"c3\", name: \"Craisins\", type: \"cat\" },\n];\n\napp.get(\"/api/v1/pets\", (request, response) => {\n  const pets = app.locals.pets;\n\n  response.json({ pets });\n});\n\napp.get(\"/api/v1/pets/:id\", (request, response) => {\n  const { id } = request.params;\n  const pet = app.locals.pets.find((pet) => pet.id === id);\n  if (!pet) {\n    return response.sendStatus(404);\n  }\n\n  response.status(200).json(pet);\n});\n\napp.post(\"/api/v1/pets\", (request, response) => {\n  const id = Date.now().toString();\n  const pet = request.body;\n\n  for (let requiredParameter of [\"name\", \"type\"]) {\n    if (!pet[requiredParameter]) {\n      return response\n        .status(422)\n        .send({\n          error: `Expected format: { name: <String>, type: <String> }. You're missing a \"${requiredParameter}\" property.`,\n        });\n    }\n  }\n\n  const { name, type } = pet;\n  app.locals.pets.push({ name, type, id });\n  response.status(201).json({ name, type, id });\n});\n\napp.delete(\"/api/v1/pets/:id\", (request, response) => {\n  const { id } = request.params;\n  const pet = app.locals.pets.find((pet) => pet.id === id);\n  if (!pet) {\n    return response\n      .status(404)\n      .send({ error: `Cannot find a pet with that id.` });\n  }\n\n  app.locals.pets = app.locals.pets.filter((pet) => pet.id !== id);\n  response.status(200).json(pet);\n});\n\napp.patch(\"/api/v1/pets/:id\", (request, response) => {\n  const { id } = request.params;\n  const updatedData = request.body;\n\n  const petToUpdate = app.locals.pets.find((pet) => pet.id === id);\n\n  if (petToUpdate) {\n    app.locals.pets.forEach((pet) => {\n      if (pet.id === id) {\n        pet.name = updatedData.value;\n        response.status(200).json(pet);\n      }\n    });\n  } else {\n    response.status(404).send({ error: `Cannot find a pet with that id.` });\n  }\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593279015883
  }
}